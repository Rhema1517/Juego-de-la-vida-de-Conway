from juegoDV import get_generation
import unittest
class Pruenasdejuegodelavida(unittest.TestCase):
    def test(self):
        
        self.assertEqual( get_generation([[1,0,0],[0,1,1],[1,1,0]],40),[[1,0,0],[0,1,1],[1,1,0]])
    def test1(self):    
        self.assertEqual( get_generation([[1, 1, 1,  0, 0,  0, 1,  0],[1, 0, 0, 0, 0,  0, 0, 1],[0, 1,  0, 0, 0,  1,  1,  1]],16),
    [[1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1]] )
    def test2(self):    
        self.assertEqual( get_generation([[0,1,1],[0,1,1],[1,1,0]],6),[[0,0],[0,0]])
    def test3(self):    
        self.assertEqual( get_generation([[0,0,0,0,0,0],[0,1,1,0,1,0],[0,1,1,0,1,0],[0,1,1,0,1,0],
    [0,0,0,0,0,0]],1),

    [[0, 1, 1, 0, 0, 0], [1, 0, 0, 0, 1, 1], [0, 1, 1, 0, 0, 0]])
    def test4(self):    
        self.assertEqual( get_generation([[0, 0, 0, 0, 0, 0, 0],[0, 1, 1, 0, 1, 0, 0],[0, 1, 0, 0, 1, 0, 0],[0, 1, 1, 1, 0, 1, 0],
    [0, 0, 0, 0, 0, 0, 0]],6),

    [[1, 0, 1, 0, 0, 0], [1, 0, 0, 1, 0, 0], [1, 0, 0, 1, 0, 0], [0, 1, 1, 0, 0, 0]])
    def test5(self):                                                                                                                 
        self.assertEqual( get_generation([[1, 1, 1, 1, 1, 1, 1],[1, 0, 0, 0, 0, 0, 1],
    [1, 0, 0, 0, 0, 1, 1],
    [1, 0, 1, 1, 0, 0, 1],
    [1, 1, 1, 1, 1, 1, 1]],1),
    [[0, 0, 1, 1, 1, 1, 1, 0, 0], 
    [0, 1, 1, 1, 1, 1, 1, 1, 0], 
    [1, 1, 0, 1, 1, 0, 0, 0, 1],
    [1, 1, 0, 0, 0, 0, 1, 1, 1],
    [1, 1, 0, 0, 0, 0, 0, 0, 1], 
    [0, 1, 0, 0, 0, 1, 1, 1, 0], 
    [0, 1, 1, 1, 1, 1, 0, 0, 0]])           
    def test6(self):                                                                                                                 
        self.assertEqual( get_generation([[0, 0, 0, 0, 0],
                                          [0, 1, 1, 1, 0],
                                          [0, 1, 0, 1, 0],
                                            [0, 1, 1, 1, 0], [0, 0, 0, 0, 0]],4),
    [[0, 0, 0, 1, 0, 0, 0],
      [0, 0, 1, 1, 1, 0, 0], 
      [0, 1, 0, 1, 0, 1, 0], 
      [1, 1, 1, 0, 1, 1, 1], 
      [0, 1, 0, 1, 0, 1, 0], 
      [0, 0, 1, 1, 1, 0, 0],
        [0, 0, 1, 0, 0, 0, 0]])
    def test7(self):                                                                                                                 
        self.assertEqual( get_generation([[0, 1, 1, 0, 0],[1, 0, 0, 1, 0],
    [1, 0, 0, 0, 1],
    [0, 1, 1, 1, 0],
    [0, 0, 0, 0, 0]],5),
    [[0, 0, 1, 1, 1, 0, 0], [0, 1, 0, 0, 0, 1, 0],
      [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0, 1],
        [0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0]])
    def test8(self):                                                                                                                 
        self.assertEqual( get_generation([[1, 1, 0, 1],
    [1, 1, 0, 1],
    [0, 0, 1, 0],
    [1, 0, 1, 1]],3),
    [[1, 1, 1, 0], [1, 0, 0, 0], [1, 1, 0, 1], [0, 1, 1, 1], [0, 0, 1, 1]])
    def test9(self):                                                                                                                 
        self.assertEqual( get_generation([[1, 0, 1, 1, 0],
    [0, 1, 0, 0, 1],
    [1, 0, 1, 1, 0],
    [0, 1, 0, 0, 1],
    [1, 0, 1, 1, 0]],2),[[0, 0, 0, 1, 0, 0, 0], [0, 0, 1, 1, 1, 0, 0], 
                         [0, 1, 0, 0, 0, 1, 0], [1, 1, 0, 0, 0, 1, 1], 
                         [0, 1, 0, 0, 0, 1, 0], [0, 0, 1, 1, 1, 0, 0], 
                         [0, 0, 1, 0, 0, 0, 0]])
    def test10(self):                                                                                                                 
        self.assertEqual( get_generation([[0, 1, 0, 0, 0],
    [0, 0, 1, 0, 0],
    [1, 1, 1, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 1, 1, 1, 0]],6)
    ,[[0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 1, 0], 
      [1, 1, 0, 1, 1, 0], [0, 1, 0, 0, 1, 1], 
      [0, 1, 0, 0, 1, 0], [0, 0, 1, 1, 0, 0]])
    def test11(self):                                                                                                                 
        self.assertEqual( get_generation([[0, 1, 0, 0, 0],
    [0, 0, 1, 0, 0],
    [1, 1, 1, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 1, 1, 1, 0]],8),
    [[0, 1, 0, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 0, 0], 
     [0, 0, 0, 0, 0], [0, 0, 0, 1, 1], [1, 0, 1, 1, 1], 
     [0, 1, 1, 1, 0]])
    def test12(self):                                                                                                                 
        self.assertEqual( get_generation([[0, 1, 0, 0, 0],
    [0, 0, 1, 0, 0],
    [1, 1, 1, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 1, 1, 1, 0]],10)
    ,[[0, 1, 0, 0], [0, 1, 0, 0],
       [1, 0, 1, 0], [0, 0, 1, 1],
         [0, 0, 0, 0], [0, 1, 1, 0],
           [0, 0, 0, 1], [0, 0, 0, 0]])
    def test13(self):                                                                                                                 
        self.assertEqual( get_generation([[0, 1, 0, 0, 0],
    [0, 0, 1, 0, 0],
    [1, 1, 1, 0, 0],
    [0, 0, 0, 0, 0],
    [0, 1, 1, 1, 0]],12)                   
    ,[[0, 1, 0, 0, 0], [0, 1, 1, 1, 0],
       [1, 0, 0, 0, 0], [0, 1, 0, 0, 1],
         [0, 1, 0, 1, 0], [0, 1, 1, 1, 0]])
if __name__=='__main__':
    unittest.main()
    
    
    
    
    
    
    
    
    